// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module4PR3.Context;

#nullable disable

namespace Module4PR3.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230121143729_SeedDb")]
    partial class SeedDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Module4PR3.Entities.Instances.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Artist", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1988, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/skrillex/",
                            Name = "Skrillex"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1945, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bob Marley"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1978, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Damian Marley"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1972, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/eminem/",
                            Name = "Eminem"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1989, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/netskyofficial/",
                            Name = "Netsky"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1770, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ludwig van Beethoven"
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateTime(1973, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/acdc/",
                            Name = "AC-DC"
                        });
                });

            modelBuilder.Entity("Module4PR3.Entities.Instances.ArtistSong", b =>
                {
                    b.Property<int?>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("SongId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSong", (string)null);

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            SongId = 1
                        },
                        new
                        {
                            ArtistId = 1,
                            SongId = 2
                        },
                        new
                        {
                            ArtistId = 1,
                            SongId = 3
                        },
                        new
                        {
                            ArtistId = 2,
                            SongId = 4
                        },
                        new
                        {
                            ArtistId = 3,
                            SongId = 5
                        },
                        new
                        {
                            ArtistId = 3,
                            SongId = 3
                        },
                        new
                        {
                            ArtistId = 4,
                            SongId = 6
                        },
                        new
                        {
                            ArtistId = 4,
                            SongId = 7
                        },
                        new
                        {
                            ArtistId = 4,
                            SongId = 8
                        },
                        new
                        {
                            ArtistId = 5,
                            SongId = 9
                        },
                        new
                        {
                            ArtistId = 5,
                            SongId = 10
                        },
                        new
                        {
                            ArtistId = 6,
                            SongId = 11
                        },
                        new
                        {
                            ArtistId = 7,
                            SongId = 12
                        });
                });

            modelBuilder.Entity("Module4PR3.Entities.Instances.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Dubstep"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Rap"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Rock"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Classic"
                        },
                        new
                        {
                            Id = 5,
                            Title = "DrumNBass"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Reggae"
                        });
                });

            modelBuilder.Entity("Module4PR3.Entities.Instances.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Song", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = new TimeSpan(0, 0, 4, 4, 0),
                            GenreId = 1,
                            ReleasedDate = new DateTime(2010, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Scary Monsters And Nice Sprites"
                        },
                        new
                        {
                            Id = 2,
                            Duration = new TimeSpan(0, 0, 4, 22, 0),
                            GenreId = 1,
                            ReleasedDate = new DateTime(2011, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "First of the Year (Equinox)"
                        },
                        new
                        {
                            Id = 3,
                            Duration = new TimeSpan(0, 0, 3, 35, 0),
                            GenreId = 1,
                            ReleasedDate = new DateTime(2012, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Make It Bun Dem"
                        },
                        new
                        {
                            Id = 4,
                            Duration = new TimeSpan(0, 0, 3, 31, 0),
                            GenreId = 6,
                            ReleasedDate = new DateTime(1977, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Jamming"
                        },
                        new
                        {
                            Id = 5,
                            Duration = new TimeSpan(0, 0, 3, 33, 0),
                            GenreId = 6,
                            ReleasedDate = new DateTime(2005, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Welcome to Jamrock"
                        },
                        new
                        {
                            Id = 6,
                            Duration = new TimeSpan(0, 0, 3, 42, 0),
                            GenreId = 2,
                            ReleasedDate = new DateTime(2020, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Higher"
                        },
                        new
                        {
                            Id = 7,
                            Duration = new TimeSpan(0, 0, 4, 44, 0),
                            GenreId = 2,
                            ReleasedDate = new DateTime(2000, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Real Slim Shady"
                        },
                        new
                        {
                            Id = 8,
                            Duration = new TimeSpan(0, 0, 5, 21, 0),
                            GenreId = 2,
                            ReleasedDate = new DateTime(2000, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Under The Influence"
                        },
                        new
                        {
                            Id = 9,
                            Duration = new TimeSpan(0, 0, 5, 54, 0),
                            GenreId = 5,
                            ReleasedDate = new DateTime(2010, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Your Way"
                        },
                        new
                        {
                            Id = 10,
                            Duration = new TimeSpan(0, 0, 3, 50, 0),
                            GenreId = 5,
                            ReleasedDate = new DateTime(2012, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Detonate"
                        },
                        new
                        {
                            Id = 11,
                            Duration = new TimeSpan(0, 0, 6, 52, 0),
                            GenreId = 4,
                            ReleasedDate = new DateTime(1802, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Moonlight Sonata (3rd Movement)"
                        },
                        new
                        {
                            Id = 12,
                            Duration = new TimeSpan(0, 0, 3, 6, 0),
                            GenreId = 3,
                            ReleasedDate = new DateTime(2020, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Shot In The Dark"
                        });
                });

            modelBuilder.Entity("Module4PR3.Entities.Instances.ArtistSong", b =>
                {
                    b.HasOne("Module4PR3.Entities.Instances.Artist", "Artist")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module4PR3.Entities.Instances.Song", "Song")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Module4PR3.Entities.Instances.Song", b =>
                {
                    b.HasOne("Module4PR3.Entities.Instances.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Module4PR3.Entities.Instances.Artist", b =>
                {
                    b.Navigation("ArtistSongs");
                });

            modelBuilder.Entity("Module4PR3.Entities.Instances.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Module4PR3.Entities.Instances.Song", b =>
                {
                    b.Navigation("ArtistSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
